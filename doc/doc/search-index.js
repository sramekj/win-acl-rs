var searchIndex = new Map(JSON.parse('[["win_acl_rs",{"t":"CCCCCHHCFNNNNNNNNPPIFNNNNNNNNNNNNNNNNNFNNNNNNNNNN","n":["acl","elevated","error","sd","sid","enable_se_security_privilege","is_admin","sd","ElevatedSecurityDescriptor","borrow","borrow_mut","from","from_path","into","try_from","try_into","type_id","Err","Ok","Result","WinError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","","from","","into","to_owned","to_string","try_from","try_into","type_id","SecurityDescriptor","borrow","borrow_mut","drop","fmt","from","from_path","into","try_from","try_into","type_id"],"q":[[0,"win_acl_rs"],[5,"win_acl_rs::elevated"],[8,"win_acl_rs::elevated::sd"],[17,"win_acl_rs::error"],[38,"win_acl_rs::sd"],[49,"core::result"],[50,"std::path"],[51,"core::convert"],[52,"core::any"],[53,"core::fmt"],[54,"windows_sys::Win32::Foundation"],[55,"alloc::string"]],"i":"`````````B`0000000Bb0``d0000000000000000`n000000000","f":"`````{{}{{f{bd}}}}{{}{{f{hd}}}}``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}````76{{{j{d}}}d}{{j{j{lc}}}b{}}{{jAf}b}{{}d}{{{j{d}}{j{d}}}h}{{{j{d}}{j{lAh}}}Aj}0;{Ald}:{jc{}}{jAn};:9`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{ln}}}b}{{{j{n}}{j{lAh}}}Aj}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}","D":"Ab","p":[[1,"unit"],[5,"WinError",17],[6,"Result",49,null,1],[1,"bool"],[1,"reference",null,null,1],[0,"mut"],[5,"SecurityDescriptor",38],[5,"Path",50],[10,"AsRef",51],[5,"TypeId",52],[1,"u8"],[5,"Formatter",53],[8,"Result",53],[8,"WIN32_ERROR",54],[5,"String",55],[5,"ElevatedSecurityDescriptor",8],[8,"Result",17]],"r":[],"b":[[28,"impl-Display-for-WinError"],[29,"impl-Debug-for-WinError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACgACAABAAoADQAAAA8AAgAUAAoAIAAAACIACQAtAAAALwACAA==","P":[[9,"T"],[12,"P"],[13,"U"],[14,"U,T"],[15,"U"],[16,""],[21,"T"],[23,""],[24,"T"],[25,""],[30,"T"],[31,""],[32,"U"],[33,"T"],[34,""],[35,"U,T"],[36,"U"],[37,""],[39,"T"],[41,""],[43,"T"],[44,"P"],[45,"U"],[46,"U,T"],[47,"U"],[48,""]]}],["win_acl_rs",{"t":"CCCCCHHCFNNNNNNNNPPIFNNNNNNNNNNNNNNNNNFNNNNNNNNNN","n":["acl","elevated","error","sd","sid","enable_se_security_privilege","is_admin","sd","ElevatedSecurityDescriptor","borrow","borrow_mut","from","from_path","into","try_from","try_into","type_id","Err","Ok","Result","WinError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","","from","","into","to_owned","to_string","try_from","try_into","type_id","SecurityDescriptor","borrow","borrow_mut","drop","fmt","from","from_path","into","try_from","try_into","type_id"],"q":[[0,"win_acl_rs"],[5,"win_acl_rs::elevated"],[8,"win_acl_rs::elevated::sd"],[17,"win_acl_rs::error"],[38,"win_acl_rs::sd"],[49,"core::result"],[50,"std::path"],[51,"core::convert"],[52,"core::any"],[53,"core::fmt"],[54,"windows_sys::Win32::Foundation"],[55,"alloc::string"]],"i":"`````````B`0000000Bb0``d0000000000000000`n000000000","f":"`````{{}{{f{bd}}}}{{}{{f{hd}}}}``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}````76{{{j{d}}}d}{{j{j{lc}}}b{}}{{jAf}b}{{}d}{{{j{d}}{j{d}}}h}{{{j{d}}{j{lAh}}}Aj}0;{Ald}:{jc{}}{jAn};:9`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{ln}}}b}{{{j{n}}{j{lAh}}}Aj}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}","D":"Al","p":[[1,"unit"],[5,"WinError",17],[6,"Result",49,null,1],[1,"bool"],[1,"reference",null,null,1],[0,"mut"],[5,"SecurityDescriptor",38],[5,"Path",50],[10,"AsRef",51],[5,"TypeId",52],[1,"u8"],[5,"Formatter",53],[8,"Result",53],[8,"WIN32_ERROR",54],[5,"String",55],[5,"ElevatedSecurityDescriptor",8],[8,"Result",17]],"r":[],"b":[[28,"impl-Display-for-WinError"],[29,"impl-Debug-for-WinError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMACgABAAAAAwACAAgAAAAKAAEADwACABQACgAgAAAAIgAJAC0AAAAvAAIA","P":[[9,"T"],[12,"P"],[13,"U"],[14,"U,T"],[15,"U"],[16,""],[21,"T"],[23,""],[24,"T"],[25,""],[30,"T"],[31,""],[32,"U"],[33,"T"],[34,""],[35,"U,T"],[36,"U"],[37,""],[39,"T"],[41,""],[43,"T"],[44,"P"],[45,"U"],[46,"U,T"],[47,"U"],[48,""]]}],["win_acl_rs",{"t":"CCCCCHHCFNNNNNNNNPPIFNNNNNNNNNNNNNNNNNFNNNNNNNNNN","n":["acl","elevated","error","sd","sid","enable_se_security_privilege","is_admin","sd","ElevatedSecurityDescriptor","borrow","borrow_mut","from","from_path","into","try_from","try_into","type_id","Err","Ok","Result","WinError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","","from","","into","to_owned","to_string","try_from","try_into","type_id","SecurityDescriptor","borrow","borrow_mut","drop","fmt","from","from_path","into","try_from","try_into","type_id"],"q":[[0,"win_acl_rs"],[5,"win_acl_rs::elevated"],[8,"win_acl_rs::elevated::sd"],[17,"win_acl_rs::error"],[38,"win_acl_rs::sd"],[49,"core::result"],[50,"std::path"],[51,"core::convert"],[52,"core::any"],[53,"core::fmt"],[54,"windows_sys::Win32::Foundation"],[55,"alloc::string"]],"i":"`````````B`0000000Bb0``d0000000000000000`n000000000","f":"`````{{}{{f{bd}}}}{{}{{f{hd}}}}``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}````76{{{j{d}}}d}{{j{j{lc}}}b{}}{{jAf}b}{{}d}{{{j{d}}{j{d}}}h}{{{j{d}}{j{lAh}}}Aj}0;{Ald}:{jc{}}{jAn};:9`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{ln}}}b}{{{j{n}}{j{lAh}}}Aj}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}","D":"B`","p":[[1,"unit"],[5,"WinError",17],[6,"Result",49,null,1],[1,"bool"],[1,"reference",null,null,1],[0,"mut"],[5,"SecurityDescriptor",38],[5,"Path",50],[10,"AsRef",51],[5,"TypeId",52],[1,"u8"],[5,"Formatter",53],[8,"Result",53],[8,"WIN32_ERROR",54],[5,"String",55],[5,"ElevatedSecurityDescriptor",8],[8,"Result",17]],"r":[],"b":[[28,"impl-Display-for-WinError"],[29,"impl-Debug-for-WinError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACEACgABAAAAAwACAAgAAAAKAAEADwACABQACgAgAAAAIgAEACgAAwAvAAIA","P":[[9,"T"],[12,"P"],[13,"U"],[14,"U,T"],[15,"U"],[16,""],[21,"T"],[23,""],[24,"T"],[25,""],[30,"T"],[31,""],[32,"U"],[33,"T"],[34,""],[35,"U,T"],[36,"U"],[37,""],[39,"T"],[41,""],[43,"T"],[44,"P"],[45,"U"],[46,"U,T"],[47,"U"],[48,""]]}],["win_acl_rs",{"t":"CCCCCHHCFNNNNNNNNPPIFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNN","n":["acl","elevated","error","sd","sid","enable_se_security_privilege","is_admin","sd","ElevatedSecurityDescriptor","borrow","borrow_mut","from","from_path","into","try_from","try_into","type_id","Err","Ok","Result","WinError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","","from","","into","to_owned","to_string","try_from","try_into","type_id","SecurityDescriptor","as_sd_string","borrow","borrow_mut","drop","fmt","from","from_path","from_sd_string","from_str","into","is_valid","try_from","try_into","type_id"],"q":[[0,"win_acl_rs"],[5,"win_acl_rs::elevated"],[8,"win_acl_rs::elevated::sd"],[17,"win_acl_rs::error"],[38,"win_acl_rs::sd"],[53,"core::result"],[54,"std::path"],[55,"core::convert"],[56,"core::any"],[57,"core::fmt"],[58,"windows_sys::Win32::Foundation"],[59,"alloc::string"],[60,"std::ffi::os_str"],[61,"core::marker"]],"i":"`````````Bh0000000Bj0``d0000000000000000`n0000000000000","f":"`````{{}{{f{bd}}}}{{}{{f{hd}}}}``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}````76{{{j{d}}}d}{{j{j{lc}}}b{}}{{jAf}b}{{}d}{{{j{d}}{j{d}}}h}{{{j{d}}{j{lAh}}}Aj}0{Ald}<:{jc{}}{jAn};:9`{{{j{n}}}{{f{B`d}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{ln}}}b}{{{j{n}}{j{lAh}}}Aj}{cc{}}{c{{f{nd}}}{{Ab{A`}}}}{{{j{c}}}{{f{nd}}}{{Ab{Bb}}Bd}}{{{j{Bf}}}{{f{nc}}}{}}{{}c{}}{{{j{n}}}h}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{jAd}","D":"Bf","p":[[1,"unit"],[5,"WinError",17],[6,"Result",53,null,1],[1,"bool"],[1,"reference",null,null,1],[0,"mut"],[5,"SecurityDescriptor",38],[5,"Path",54],[10,"AsRef",55],[5,"TypeId",56],[1,"u8"],[5,"Formatter",57],[8,"Result",57],[8,"WIN32_ERROR",58],[5,"String",59],[5,"OsString",60],[5,"OsStr",60],[10,"Sized",61],[1,"str"],[5,"ElevatedSecurityDescriptor",8],[8,"Result",17]],"r":[],"b":[[28,"impl-Display-for-WinError"],[29,"impl-Debug-for-WinError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIACgABAAAAAwACAAgAAAAKAAEADwACABQACwAiAAQAKQADADAAAAAzAAIA","P":[[9,"T"],[12,"P"],[13,"U"],[14,"U,T"],[15,"U"],[16,""],[21,"T"],[23,""],[24,"T"],[25,""],[31,"T"],[32,"U"],[33,"T"],[34,""],[35,"U,T"],[36,"U"],[37,""],[40,"T"],[42,""],[44,"T"],[45,"P"],[46,"S"],[47,"FromStr::Err"],[48,"U"],[49,""],[50,"U,T"],[51,"U"],[52,""]]}],["win_acl_rs",{"t":"SSSSSISSSSSSSSCCCCCCFNNNNNNNHHCFNNNNNNNNPPIFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNFNNNNNNNFNNNNNNNNNNNN","n":["SE_DS_OBJECT","SE_DS_OBJECT_ALL","SE_FILE_OBJECT","SE_KERNEL_OBJECT","SE_LMSHARE","SE_OBJECT_TYPE","SE_PRINTER","SE_PROVIDER_DEFINED_OBJECT","SE_REGISTRY_KEY","SE_REGISTRY_WOW64_32KEY","SE_REGISTRY_WOW64_64KEY","SE_SERVICE","SE_UNKNOWN_OBJECT_TYPE","SE_WINDOW_OBJECT","acl","elevated","error","sd","sid","utils","Acl","borrow","borrow_mut","from","into","try_from","try_into","type_id","enable_se_security_privilege","is_admin","sd","ElevatedSecurityDescriptor","borrow","borrow_mut","from","from_path","into","try_from","try_into","type_id","Err","Ok","Result","WinError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","","from","","into","to_owned","to_string","try_from","try_into","type_id","SecurityDescriptor","as_sd_string","borrow","borrow_mut","dacl","drop","fmt","from","from_handle","from_path","from_sd_string","from_str","group_sid","into","is_valid","owner_sid","try_from","try_into","type_id","Sid","borrow","borrow_mut","from","into","try_from","try_into","type_id","WideCString","as_os_string","as_ptr","as_ref","borrow","borrow_mut","from","from_wide_slice","into","new","try_from","try_into","type_id"],"q":[[0,"win_acl_rs"],[20,"win_acl_rs::acl"],[28,"win_acl_rs::elevated"],[31,"win_acl_rs::elevated::sd"],[40,"win_acl_rs::error"],[61,"win_acl_rs::sd"],[80,"win_acl_rs::sid"],[88,"win_acl_rs::utils"],[101,"core::result"],[102,"core::any"],[103,"std::path"],[104,"core::convert"],[105,"core::fmt"],[106,"windows_sys::Win32::Foundation"],[107,"alloc::string"],[108,"std::ffi::os_str"],[109,"core::option"],[110,"windows_sys::Win32::Security::Authorization"],[111,"core::marker"]],"i":"`````````````````````Bd000000````Ch0000000Cj0``n0000000000000000`Ab00000000000000000`Cb000000`Bh00000000000","f":"{{}b}0000`00000000```````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{cc{}}{{}c{}}{c{{h{e}}}{}{}}{{}{{h{c}}}{}}{dj}{{}{{h{ln}}}}{{}{{h{A`n}}}}``876{c{{h{Abn}}}{{Af{Ad}}}}6543````98{{{d{n}}}n}{{d{d{fc}}}l{}}{{dAh}l}{{}n}{{{d{n}}{d{n}}}A`}{{{d{n}}{d{fAj}}}Al}0{Ann}>={dc{}}{dB`}>=<`{{{d{Ab}}}{{h{Bbn}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Ab}}}{{Bf{{d{Bd}}}}}}{{{d{fAb}}}l}{{{d{Ab}}{d{fAj}}}Al}{cc{}}{{BhBj}{{h{Abn}}}}{c{{h{Abn}}}{{Af{Ad}}}}{{{d{c}}}{{h{Abn}}}{{Af{Bl}}Bn}}{{{d{C`}}}{{h{Abc}}}{}}{{{d{Ab}}}{{Bf{{d{Cb}}}}}}{{}c{}}{{{d{Ab}}}A`}2{c{{h{e}}}{}{}}{{}{{h{c}}}{}}{dj}`?>:4210`{{{d{Bh}}}Bb}{{{d{Bh}}}Cd}{{{d{Bh}}}{{d{Bh}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}?{{{d{{Cf{Cd}}}}}Bh}:{{{d{c}}}Bh{{Af{Bl}}Bn}}987","D":"Cd","p":[[1,"i32"],[1,"reference",null,null,1],[0,"mut"],[6,"Result",101,null,1],[5,"TypeId",102],[1,"unit"],[5,"WinError",40],[1,"bool"],[5,"SecurityDescriptor",61],[5,"Path",103],[10,"AsRef",104],[1,"u8"],[5,"Formatter",105],[8,"Result",105],[8,"WIN32_ERROR",106],[5,"String",107],[5,"OsString",108],[5,"Acl",20],[6,"Option",109,null,1],[5,"WideCString",88],[8,"SE_OBJECT_TYPE",0,110],[5,"OsStr",108],[10,"Sized",111],[1,"str"],[5,"Sid",80],[1,"u16"],[1,"slice"],[5,"ElevatedSecurityDescriptor",31],[8,"Result",40]],"r":[[0,110],[1,110],[2,110],[3,110],[4,110],[5,110],[6,110],[7,110],[8,110],[9,110],[10,110],[11,110],[12,110],[13,110]],"b":[[51,"impl-Debug-for-WinError"],[52,"impl-Display-for-WinError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsADgABAA4AEQAGABoAAgAfAAAAIQABACYAAgArAAsAOQAEAEAABABJAAEATQAGAFYACABgAAAAYgADAA==","P":[[21,"T"],[24,"U"],[25,"U,T"],[26,"U"],[27,""],[32,"T"],[35,"P"],[36,"U"],[37,"U,T"],[38,"U"],[39,""],[44,"T"],[46,""],[47,"T"],[48,""],[54,"T"],[55,"U"],[56,"T"],[57,""],[58,"U,T"],[59,"U"],[60,""],[63,"T"],[65,""],[68,"T"],[69,""],[70,"P"],[71,"S"],[72,"FromStr::Err"],[73,""],[74,"U"],[75,""],[77,"U,T"],[78,"U"],[79,""],[81,"T"],[84,"U"],[85,"U,T"],[86,"U"],[87,""],[92,"T"],[95,""],[96,"U"],[97,"S"],[98,"U,T"],[99,"U"],[100,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2014,2023,2023,2301,3863]}